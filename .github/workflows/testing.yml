name: Testing
on: push
jobs:
  build-and-test:
    name: Testing using ${{ matrix.os }} with ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.7", "3.10"]
    steps:
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow --tags

      - name: Get current year-month
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m')"
      - name: Cache conda
        id: cache-conda
        uses: actions/cache@v1
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-conda-${{ hashFiles('environment.yml') }}-${{ steps.date.outputs.date }}


      - if: steps.cache-virtualenv.outputs.cache-hit != 'true'
        uses: s-weigand/setup-conda@v1
        with:
          update-conda: true
          python-version: ${{ matrix.python-version }}
          conda-channels: conda-forge

      - if: steps.cache-conda.outputs.cache-hit != 'true'
        name: Install pytest, environment, and ros3 if the environment was not cached
        run: |
          conda env create -f environment.yml
          conda init bash
          conda activate myenvname
          pip install pytest
          pip install pytest-cov
          pip uninstall -y h5py
          conda install -c conda-forge h5py
          
      - if: steps.cache-conda.outputs.cache-hit == 'true'
        run: |
          bash
          conda activate myenvname
          
      - name: Run pytest with coverage
        run: pytest --cov=./ --cov-report xml:./nwbinspector/nwbinspector/coverage.xml
      - if: ${{ matrix.python-version == '3.10' && matrix.os == 'ubuntu-latest' }}
        name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          version: "v0.1.15"
          fail_ci_if_error: true
          file: ./nwbinspector/nwbinspector/coverage.xml
          flags: unittests
